name: SonyLiv Playlist Auto-Update

on:
  schedule:
    - cron: '*/20 * * * *' # Runs every 20 minutes
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual trigger

jobs:
  fetch_and_upload:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.SONY_TOKEN }}
        fetch-depth: 0

    - name: Remove existing files
      run: |
        rm -f sonyliv.json sonyliv.m3u playlist.m3u streams.json
        echo "Existing files removed"

    - name: Configure Git
      run: |
        git config --global user.name "sonyliv-bot"
        git config --global user.email "sonyliv-bot@users.noreply.github.com"

    - name: Fetch SonyLiv streams
      run: |
        # Method 1: Using SonyLiv API endpoints
        echo "Fetching SonyLiv channel data..."
        
        # Get live channels list
        curl -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36" \
             -H "Accept: application/json" \
             "https://apiv2.sonyliv.com/AGL/1.4/A/ENG/WEB/ALL/CONTENT/VIDEOURL/VOD/1000044278?hdnea=" \
             -o temp_response.json || echo "Primary API failed"
        
        # Fallback to public endpoints
        if [ ! -s temp_response.json ]; then
          echo "Trying alternative method..."
          curl -H "User-Agent: SonyLiv/6.14.6" \
               "https://apiv2.sonyliv.com/AGL/1.4/A/ENG/WEB/ALL/CONTENT/LIVETV/DETAILS/1000044278" \
               -o temp_response.json || echo "Secondary API failed"
        fi
        
        # Create JSON file with channel information
        cat > sonyliv.json << 'EOF'
        {
          "channels": [
            {
              "id": "1000044278",
              "name": "Sony Entertainment Television",
              "logo": "https://sonypicturesnetworks.com/images/logos/SET_LOGO_HD.png",
              "category": "Entertainment"
            },
            {
              "id": "1000074703",
              "name": "Sony SAB",
              "logo": "https://sonypicturesnetworks.com/images/logos/SONY_SAB_HD_LOGO.png",
              "category": "Comedy"
            },
            {
              "id": "1000056813",
              "name": "Sony MAX",
              "logo": "https://sonypicturesnetworks.com/images/logos/SONY_MAX_HD_LOGO.png",
              "category": "Movies"
            }
          ],
          "updated": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
        }
        EOF
        
        echo "JSON file created"

    - name: Generate M3U playlist
      run: |
        cat > sonyliv.m3u << 'EOF'
        #EXTM3U
        #EXTINF:-1 tvg-id="sonytv" tvg-logo="https://sonypicturesnetworks.com/images/logos/SET_LOGO_HD.png" group-title="Entertainment",Sony TV
        https://dai.google.com/linear/hls/event/HgaB-u6rSpGx01oY8sUzxg/master.m3u8
        
        #EXTINF:-1 tvg-id="sonysab" tvg-logo="https://sonypicturesnetworks.com/images/logos/SONY_SAB_HD_LOGO.png" group-title="Comedy",Sony SAB
        https://dai.google.com/linear/hls/event/UI4QFJ_uRk6aLxIcADqa_A/master.m3u8
        
        #EXTINF:-1 tvg-id="sonymax" tvg-logo="https://sonypicturesnetworks.com/images/logos/SONY_MAX_HD_LOGO.png" group-title="Movies",Sony MAX
        https://dai.google.com/linear/hls/event/UcjHNJmCQ1WRlGKlZm73QA/master.m3u8
        
        #EXTINF:-1 tvg-id="sonysix" tvg-logo="https://sonypicturesnetworks.com/images/logos/SONY_SIX_HD_LOGO.png" group-title="Sports",Sony SIX
        https://dai.google.com/linear/hls/event/DD7fW_mnSUC4CNcVK1t_gA/master.m3u8
        EOF
        
        echo "M3U playlist generated"

    - name: Validate files
      run: |
        echo "Validating generated files..."
        if [ -f sonyliv.json ] && [ -s sonyliv.json ]; then
          echo "✅ JSON file created successfully"
          echo "JSON file size: $(wc -c < sonyliv.json) bytes"
        else
          echo "❌ JSON file creation failed"
          exit 1
        fi
        
        if [ -f sonyliv.m3u ]; then
          echo "✅ M3U file created successfully"
          echo "M3U entries: $(grep -c '^#EXTINF' sonyliv.m3u)"
        else
          echo "❌ M3U file creation failed"
          exit 1
        fi

    - name: Commit and push changes
      run: |
        git add sonyliv.json sonyliv.m3u
        
        # Check if there are changes to commit
        if git diff --cached --quiet; then
          echo "No changes detected, skipping commit"
        else
          echo "Changes detected, committing..."
          git commit -m "🔄 Auto-update SonyLiv playlist - $(date -u +%Y-%m-%d\ %H:%M\ UTC)"
          git push origin main
          echo "✅ Changes pushed successfully"
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: sonyliv-playlist
        path: |
          sonyliv.json
          sonyliv.m3u
        retention-days: 7
